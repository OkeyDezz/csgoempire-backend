#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
from dotenv import load_dotenv

# Carrega .env
load_dotenv()

SUPABASE_URL = os.environ.get("SUPABASE_URL")
SUPABASE_KEY = os.environ.get("SUPABASE_SERVICE_ROLE") or os.environ.get("SUPABASE_ANON_KEY")
MARKET_TABLE = os.environ.get("SUPABASE_MARKET_TABLE", "market_data")

print(f"üîç Testando conex√£o com Supabase...")
print(f"URL: {SUPABASE_URL}")
print(f"Key: {SUPABASE_KEY[:20]}..." if SUPABASE_KEY else "‚ùå Key n√£o encontrada")
print(f"Tabela: {MARKET_TABLE}")

try:
    from supabase import create_client
    
    if not SUPABASE_URL or not SUPABASE_KEY:
        print("‚ùå SUPABASE_URL ou SUPABASE_KEY n√£o configurados")
        exit(1)
    
    # Cria cliente
    sb = create_client(SUPABASE_URL, SUPABASE_KEY)
    print("‚úÖ Cliente Supabase criado")
    
    # Testa conex√£o b√°sica
    print("\nüîç Testando conex√£o b√°sica...")
    response = sb.table("_test_connection").select("1").limit(1).execute()
    print("‚úÖ Conex√£o b√°sica OK")
    
except Exception as e:
    print(f"‚ùå Erro na conex√£o b√°sica: {e}")
    exit(1)

try:
    # Testa acesso √† tabela market_data
    print(f"\nüîç Testando acesso √† tabela '{MARKET_TABLE}'...")
    
    # Primeiro, lista todas as tabelas
    print("üìã Listando tabelas dispon√≠veis...")
    response = sb.rpc("get_tables").execute()
    print(f"Tabelas: {response.data}")
    
except Exception as e:
    print(f"‚ö†Ô∏è Erro ao listar tabelas: {e}")
    
    # Tenta acessar diretamente
    try:
        print(f"\nüîç Tentando acessar '{MARKET_TABLE}' diretamente...")
        response = sb.table(MARKET_TABLE).select("*").limit(1).execute()
        print(f"‚úÖ Tabela {MARKET_TABLE} acess√≠vel")
        print(f"Dados: {response.data}")
        
    except Exception as e2:
        print(f"‚ùå Erro ao acessar {MARKET_TABLE}: {e2}")
        
        # Verifica se a tabela existe
        try:
            print(f"\nüîç Verificando estrutura da tabela...")
            response = sb.table(MARKET_TABLE).select("count").execute()
            print(f"‚úÖ Tabela {MARKET_TABLE} existe")
            
        except Exception as e3:
            print(f"‚ùå Tabela {MARKET_TABLE} n√£o existe ou n√£o acess√≠vel")
            print(f"Erro: {e3}")

print("\n‚úÖ Teste conclu√≠do!")
