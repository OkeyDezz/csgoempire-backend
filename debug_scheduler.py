#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
from dotenv import load_dotenv

print("üîç DEBUG: Iniciando diagn√≥stico do scheduler...")

# Carrega .env
load_dotenv()

# Verifica vari√°veis
print(f"SUPABASE_URL: {'‚úÖ' if os.getenv('SUPABASE_URL') else '‚ùå'}")
print(f"SUPABASE_ANON_KEY: {'‚úÖ' if os.getenv('SUPABASE_ANON_KEY') else '‚ùå'}")
print(f"SUPABASE_SERVICE_ROLE: {'‚úÖ' if os.getenv('SUPABASE_SERVICE_ROLE') else '‚ùå'}")
print(f"SUPABASE_MARKET_TABLE: {'‚úÖ' if os.getenv('SUPABASE_MARKET_TABLE') else '‚ùå'}")

try:
    print("\nüîç Testando import do Supabase...")
    from supabase import create_client
    print("‚úÖ Supabase import OK")
    
    # Cria cliente
    url = os.getenv('SUPABASE_URL')
    key = os.getenv('SUPABASE_SERVICE_ROLE') or os.getenv('SUPABASE_ANON_KEY')
    
    print(f"URL: {url}")
    print(f"Key: {key[:20]}..." if key else "‚ùå Key n√£o encontrada")
    
    sb = create_client(url, key)
    print("‚úÖ Cliente Supabase criado")
    
    # Testa conex√£o b√°sica
    print("\nüîç Testando conex√£o b√°sica...")
    try:
        response = sb.table("_test_connection").select("1").limit(1).execute()
        print("‚úÖ Conex√£o b√°sica OK")
    except Exception as e:
        print(f"‚ö†Ô∏è Conex√£o b√°sica falhou (esperado): {e}")
    
    # Testa acesso √† tabela market_data
    table_name = os.getenv('SUPABASE_MARKET_TABLE', 'market_data')
    print(f"\nüîç Testando acesso √† tabela '{table_name}'...")
    
    try:
        # Tenta fazer um select simples
        response = sb.table(table_name).select("*").limit(1).execute()
        print(f"‚úÖ Tabela {table_name} acess√≠vel")
        print(f"Dados retornados: {len(response.data)} registros")
        
    except Exception as e:
        print(f"‚ùå Erro ao acessar {table_name}: {e}")
        print(f"Tipo de erro: {type(e).__name__}")
        
        # Tenta verificar se a tabela existe
        try:
            print(f"\nüîç Verificando se a tabela existe...")
            response = sb.table(table_name).select("count").execute()
            print(f"‚úÖ Tabela {table_name} existe")
            
        except Exception as e2:
            print(f"‚ùå Tabela {table_name} n√£o existe ou n√£o acess√≠vel")
            print(f"Erro: {e2}")
            
            # Lista tabelas dispon√≠veis
            try:
                print(f"\nüîç Listando tabelas dispon√≠veis...")
                # Tenta acessar uma tabela que sabemos que existe
                response = sb.table("purchases").select("*").limit(1).execute()
                print("‚úÖ Tabela 'purchases' acess√≠vel")
                
            except Exception as e3:
                print(f"‚ùå Nenhuma tabela acess√≠vel: {e3}")
                
except Exception as e:
    print(f"‚ùå Erro geral: {e}")
    print(f"Tipo: {type(e).__name__}")
    import traceback
    traceback.print_exc()

print("\n‚úÖ Diagn√≥stico conclu√≠do!")
